// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: build_config.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuildConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SOF repository URL
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// git branch
	Branch string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	// git commit
	Commit string `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	// Name of the tarball, without the file extension
	Tarball string `protobuf:"bytes,4,opt,name=tarball,proto3" json:"tarball,omitempty"`
	// If specified, the files will be placed directly in the tarball
	// Otherwise, the files will be inside a directory named as the tarball name
	FlatTarball bool         `protobuf:"varint,5,opt,name=flat_tarball,json=flatTarball,proto3" json:"flat_tarball,omitempty"`
	Version     string       `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Firmware    *Firmware    `protobuf:"bytes,8,opt,name=firmware,proto3" json:"firmware,omitempty"`
	Topology    *Topology    `protobuf:"bytes,9,opt,name=topology,proto3" json:"topology,omitempty"`
	ExtraBlob   []*ExtraBlob `protobuf:"bytes,10,rep,name=extra_blob,json=extraBlob,proto3" json:"extra_blob,omitempty"`
	Artifact    []*Artifact  `protobuf:"bytes,11,rep,name=artifact,proto3" json:"artifact,omitempty"`
}

func (x *BuildConfig) Reset() {
	*x = BuildConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildConfig) ProtoMessage() {}

func (x *BuildConfig) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildConfig.ProtoReflect.Descriptor instead.
func (*BuildConfig) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{0}
}

func (x *BuildConfig) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *BuildConfig) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *BuildConfig) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *BuildConfig) GetTarball() string {
	if x != nil {
		return x.Tarball
	}
	return ""
}

func (x *BuildConfig) GetFlatTarball() bool {
	if x != nil {
		return x.FlatTarball
	}
	return false
}

func (x *BuildConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuildConfig) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

func (x *BuildConfig) GetTopology() *Topology {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *BuildConfig) GetExtraBlob() []*ExtraBlob {
	if x != nil {
		return x.ExtraBlob
	}
	return nil
}

func (x *BuildConfig) GetArtifact() []*Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

type Firmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docker *DockerConfig `protobuf:"bytes,1,opt,name=docker,proto3" json:"docker,omitempty"`
	// Build arg passed to xtensa-build-all.sh
	BuildArg []string `protobuf:"bytes,2,rep,name=build_arg,json=buildArg,proto3" json:"build_arg,omitempty"`
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{1}
}

func (x *Firmware) GetDocker() *DockerConfig {
	if x != nil {
		return x.Docker
	}
	return nil
}

func (x *Firmware) GetBuildArg() []string {
	if x != nil {
		return x.BuildArg
	}
	return nil
}

type Topology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docker *DockerConfig `protobuf:"bytes,1,opt,name=docker,proto3" json:"docker,omitempty"`
}

func (x *Topology) Reset() {
	*x = Topology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topology) ProtoMessage() {}

func (x *Topology) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topology.ProtoReflect.Descriptor instead.
func (*Topology) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{2}
}

func (x *Topology) GetDocker() *DockerConfig {
	if x != nil {
		return x.Docker
	}
	return nil
}

type DockerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use docker to build
	Use bool `protobuf:"varint,1,opt,name=use,proto3" json:"use,omitempty"`
	// Docker image identifier
	// https://docs.docker.com/engine/reference/run/#imagedigest
	// Defaults to thesofproject/sof:latest
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *DockerConfig) Reset() {
	*x = DockerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerConfig) ProtoMessage() {}

func (x *DockerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerConfig.ProtoReflect.Descriptor instead.
func (*DockerConfig) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{3}
}

func (x *DockerConfig) GetUse() bool {
	if x != nil {
		return x.Use
	}
	return false
}

func (x *DockerConfig) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name to put in the tarball. Defaults to basename of built_path.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Path of the built artifact
	BuiltPath string `protobuf:"bytes,2,opt,name=built_path,json=builtPath,proto3" json:"built_path,omitempty"`
	// The checksum of the artifact
	Sha256 string `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{4}
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetBuiltPath() string {
	if x != nil {
		return x.BuiltPath
	}
	return ""
}

func (x *Artifact) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

type ExtraBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Human-readable description of the blob
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Relative path to the config file
	Src string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	// Path placed in SOF repository
	Dst string `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`
	// Sha256 Checksum of the BLOB
	Sha256 string `protobuf:"bytes,4,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *ExtraBlob) Reset() {
	*x = ExtraBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraBlob) ProtoMessage() {}

func (x *ExtraBlob) ProtoReflect() protoreflect.Message {
	mi := &file_build_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraBlob.ProtoReflect.Descriptor instead.
func (*ExtraBlob) Descriptor() ([]byte, []int) {
	return file_build_config_proto_rawDescGZIP(), []int{5}
}

func (x *ExtraBlob) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExtraBlob) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ExtraBlob) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *ExtraBlob) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

var File_build_config_proto protoreflect.FileDescriptor

var file_build_config_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xec,
	0x02, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x6c, 0x61, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52,
	0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52,
	0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x42, 0x6c,
	0x6f, 0x62, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x2e, 0x0a,
	0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x22, 0x57, 0x0a,
	0x08, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x72, 0x67, 0x22, 0x3a, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x22, 0x40, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x75, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0x69, 0x0a, 0x09, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x66, 0x71, 0x39, 0x38, 0x34, 0x2f, 0x73, 0x6f, 0x66, 0x2d,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_build_config_proto_rawDescOnce sync.Once
	file_build_config_proto_rawDescData = file_build_config_proto_rawDesc
)

func file_build_config_proto_rawDescGZIP() []byte {
	file_build_config_proto_rawDescOnce.Do(func() {
		file_build_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_build_config_proto_rawDescData)
	})
	return file_build_config_proto_rawDescData
}

var file_build_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_build_config_proto_goTypes = []interface{}{
	(*BuildConfig)(nil),  // 0: tutorial.BuildConfig
	(*Firmware)(nil),     // 1: tutorial.Firmware
	(*Topology)(nil),     // 2: tutorial.Topology
	(*DockerConfig)(nil), // 3: tutorial.DockerConfig
	(*Artifact)(nil),     // 4: tutorial.Artifact
	(*ExtraBlob)(nil),    // 5: tutorial.ExtraBlob
}
var file_build_config_proto_depIdxs = []int32{
	1, // 0: tutorial.BuildConfig.firmware:type_name -> tutorial.Firmware
	2, // 1: tutorial.BuildConfig.topology:type_name -> tutorial.Topology
	5, // 2: tutorial.BuildConfig.extra_blob:type_name -> tutorial.ExtraBlob
	4, // 3: tutorial.BuildConfig.artifact:type_name -> tutorial.Artifact
	3, // 4: tutorial.Firmware.docker:type_name -> tutorial.DockerConfig
	3, // 5: tutorial.Topology.docker:type_name -> tutorial.DockerConfig
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_build_config_proto_init() }
func file_build_config_proto_init() {
	if File_build_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_build_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_build_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_build_config_proto_goTypes,
		DependencyIndexes: file_build_config_proto_depIdxs,
		MessageInfos:      file_build_config_proto_msgTypes,
	}.Build()
	File_build_config_proto = out.File
	file_build_config_proto_rawDesc = nil
	file_build_config_proto_goTypes = nil
	file_build_config_proto_depIdxs = nil
}
